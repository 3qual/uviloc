networks:
  backend:
    driver: ${NETWORKS_DRIVER}
  frontend:
    driver: ${NETWORKS_DRIVER}
volumes:
  postgres:
    driver: ${VOLUMES_DRIVER}
  react:
    driver: ${VOLUMES_DRIVER}

services:

### PostgreSQL ###########################################
    postgres:
      build:
        context: ./postgres
        args:
          - POSTGRES_VERSION=${POSTGRES_VERSION}
      volumes:
        - ${DATA_PATH_HOST}:/var/lib/postgresql/data
      ports:
        - "${POSTGRES_PORT}:${POSTGRESS_EXTERNAL_PORT}"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
        - backend

### php-fpm ############################################
    php-fpm:
      build:
        context: ./php-fpm
        args:
          - PHP_FPM_VERSION=${PHP_FPM_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}/uviloc-laravel:${APP_CODE_PATH_CONTAINER}/uviloc-laravel
      ports:
        - "${PHP_FPM_XDEBUG_PORT}:${PHP_FPM_XDEBUG_PORT}"
      networks:
        - frontend
        - backend

### NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - NGINX_VERSION=${NGINX_VERSION}
          - CHANGE_SOURCE=${CHANGE_SOURCE}
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
        - "${VARNISH_BACKEND_PORT}:81"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend
      extra_hosts:
        - "host.docker.internal:host-gateway"  

# ### Node ###########################################
#     node:
#       tty: true
#       build:
#         context: ./node
#         args:
#           - NODE_VERSION=${NODE_VERSION}
#       volumes:
#         - ${APP_CODE_PATH_HOST}/uviloc-react_nextjs:${NODE_REACT_DIR}/uviloc-react_nextjs
#       ports:
#         - "${NODE_REACT_PORT}:${NODE_REACT_PORT}"
#       networks:
#         - frontend
#         - backend

### Python ###########################################
    python:
      tty: true
      build:
        context: ./python
        args:
          - PYTHON_VERSION=${PYTHON_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}/uviloc-tgbot:${PYTHON_BOT_DIR}/uviloc-tgbot
      ports:
        - ${PYTHON_BOT_PORT}:${PYTHON_BOT_PORT}
      networks:
        - frontend
        - backend

### pgAdmin ###########################################
    pgadmin:
      build:
        context: ./pgadmin
      environment:
        - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
        - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
      ports:
        - "${PGADMIN_PORT}:80"
      volumes:
        - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
      depends_on:
        - postgres
      networks:
        - backend
